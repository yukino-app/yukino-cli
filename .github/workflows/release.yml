name: Release

on:
    push:
        branches:
            - main
    workflow_dispatch:

env:
    APP_NAME: yukimi
    DART_SDK: beta
    INPUT_PATH: src/main.dart
    OUTPUT_EXE_DIR: bin
    DEPLOY_BRANCH_PREFIX: dist
    GIT_CONFIG_NAME: "[Automated] Yui"
    GIT_CONFIG_EMAIL: yukino-org@users.noreply.github.com

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os:
                    - ubuntu-latest
                    - windows-latest
                    - macOS-latest
        steps:
            - uses: actions/checkout@v2

            - uses: dart-lang/setup-dart@v1
              with:
                  sdk: ${{ env.DART_SDK }}

            - uses: actions/github-script@v6
              id: exe-path
              with:
                  result-encoding: string
                  script: |
                      const { getExecutableName } = require("./cli/actions/executable_name");
                      const executableName = await getExecutableName();
                      return executableName;

            - uses: actions/github-script@v6
              id: release-tag
              with:
                  result-encoding: string
                  script: |
                      const { getVersion } = require("./cli/actions/version");
                      const version = await getVersion();
                      return `v${version}`;

            - uses: actions/github-script@v6
              id: release-body
              env:
                  RELEASE_TAG: ${{ steps.release-tag.outputs.result }}
              with:
                  result-encoding: string
                  script: |
                      const { getReleaseBody } = require("./cli/actions/release_body");
                      return getReleaseBody();

            - name: ðŸš§ Do prerequisites
              run: |
                  dart pub get
                  dart run ./cli/generate_meta.dart

            - name: ðŸ‘· Build executable
              run: dart compile exe -o ${{ steps.exe-path.outputs.result }} ${{ env.INPUT_PATH }}

            - name: ðŸš€ Release executables
              uses: ncipollo/release-action@v1
              with:
                  tag: ${{ steps.release-tag.outputs.result }}
                  artifacts: "${{ env.OUTPUT_EXE_DIR }}/*"
                  body: ${{ steps.release-body.outputs.result }}
                  allowUpdates: true
                  draft: true

    data:
        needs:
            - build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - uses: dart-lang/setup-dart@v1
              with:
                  sdk: ${{ env.DART_SDK }}

            - run: |
                  dart pub get
                  dart run ./cli/generate_docs.dart

            - uses: actions/github-script@v6
              id: data-path
              with:
                  result-encoding: string
                  script: |
                      const { generateData } = require("./cli/actions/generate_dist_data");
                      const dataDir = await generateData();
                      return dataDir;

            - name: ðŸš€ Update data
              uses: zyrouge/gh-push-action@v1.0.0
              with:
                  directory: ${{ steps.data-path.outputs.result }}
                  branch: ${{ env.DEPLOY_BRANCH_PREFIX }}-data
                  local-username: ${{ env.GIT_CONFIG_NAME }}
                  local-email: ${{ env.GIT_CONFIG_EMAIL }}
                  commit-message: "[automated] update data (${{ github.sha }})"
                  allow-empty-commit: true
